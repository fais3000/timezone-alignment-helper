# 🌍 Timezone### 📊 **How it works:**
1. **Set your US working hours** (default: 12 PM - 5 PM ET)
2. **View the full-width interactive map** where cities are color-coded by timezone alignment:
   - 🟢 **Perfect** = 80%+ of your work hours fall within 4 AM - 9 PM local time
   - 🟡 **Good** = 50%+ overlap with reasonable local hours
   - 🔴 **Poor** = Less than 50% overlap with good local hours
3. **Browse the detailed table** to see exact local working hours for each city
4. **Check meal costs** to help with budget planning (sorted by affordability)

### 💡 **Key Insight:**
Working 12 PM - 5 PM ET means:
- **Americas** (Mexico, Brazil, Argentina) = Perfect timing!
- **Europe** (London, Berlin, Paris) = Good evening hours (5-10 PM local)
- **Asia** (Tokyo, Bangkok, Mumbai) = Poor timing (late night/early morning local hours) 
**Find the perfect countries for remote work based on timezone compatibility with US business hours.**

## What does this tool do?

This tool helps **remote workers, digital nomads, and freelancers** find countries where the local working hours align well with US Eastern Time business schedules.

### 🎯 **Perfect for:**
- **Remote employees** working for US companies while traveling/living abroad
- **Freelancers** who need to collaborate with US clients during business hours
- **Digital nomads** planning their next destination based on work schedule compatibility
- **Consultants** who want to maintain US business hour availability

### 📊 **How it works:**
1. **Set your US working hours** (default: 12 PM - 5 PM ET)
2. **View the global map** where cities are color-coded by timezone alignment:
   - � **Perfect** = 80%+ of your work hours fall within 4 AM - 9 PM local time
   - 🟡 **Good** = 50%+ overlap with reasonable local hours
   - ⚪ **Fair** = Some overlap with local business hours
   - 🔴 **Poor** = Most work happens during local night hours
3. **Browse the detailed table** to see exact local working hours for each city
4. **Check meal costs** to help with budget planning

### 💡 **Key Insight:**
Working 12 PM - 5 PM ET means:
- **Americas** (Mexico, Brazil, Argentina) = Perfect timing!
- **Europe** (London, Berlin, Paris) = Good morning hours (5-10 PM local)
- **Asia** (Tokyo, Bangkok, Mumbai) = Late night/early morning local hours

## 🚀 Features

- 🗺️ **Full-width interactive world map** with 100+ countries and major cities
- ⚙️ **Customizable working hours** (any US Eastern Time schedule)
- 📍 **Auto-detect your location** and show current time
- 🎯 **Smart filtering** (show all cities or only good/perfect matches)
- 💰 **Meal cost data** sorted by affordability for budget planning
- ⏰ **Real-time timezone calculations** with automatic DST support
- 🎨 **Beautiful modern design** using Google Fonts (Bitter & Raleway)
- 📱 **Fully responsive** shadow-free clean interface
- 🔄 **Live time updates** every second

### Recent Updates:
- ✅ **Simplified rating system**: Merged "Fair" and "Poor" into single "Poor" category
- ✅ **Enhanced DST handling**: Robust daylight saving time calculations
- ✅ **Full-width map**: Dedicated map section for better visualization
- ✅ **Modern typography**: Google Fonts integration for better readability
- ✅ **Clean design**: Removed all shadows for minimalist aesthetic

## 🛠️ Technical Details

### Files Structure:
- `index.html` - Main application interface
- `script.js` - Core logic and timezone calculations
- `style.css` - Custom styles and animations
- `cities.json` - Database of 100+ cities with timezone and cost data
- `README.md` - This documentation

### Timezone Calculations:
- Uses `Intl.DateTimeFormat` for accurate timezone conversions
- Automatically handles Daylight Saving Time (DST) transitions
- Real-time calculations based on current date/time
- Supports all IANA timezone identifiers

### DST Testing:
To verify DST functionality, open browser console and run:
```javascript
verifyDSTFunctionality()
```

## � Quick Start

### Local Development
```bash
# Clone or download the files
# Start a local server (required for JSON loading)
python -m http.server 8000
# Open http://localhost:8000
```

### Deploy to Cloudflare Pages
1. Upload all files to your repository
2. Set build command: (none needed - static files)
3. Set output directory: `/` (root)
4. Deploy!

### Deploy to GitHub Pages
1. Push files to your GitHub repository
2. Go to Settings > Pages
3. Select source: Deploy from a branch
4. Choose main branch and root folder
5. Your site will be available at `https://username.github.io/repository-name`

## 🎯 Use Cases

### For Remote Workers:
- **Planning relocations**: Find countries where you can work normal US hours without staying up all night
- **Vacation planning**: Choose destinations where you can still attend important meetings
- **Cost optimization**: Compare living costs while maintaining work schedule compatibility

### For Digital Nomads:
- **Route planning**: Plan your travels around timezone-friendly countries
- **Client communication**: Ensure you can maintain regular communication during US business hours
- **Work-life balance**: Find places where your work hours align with local daytime

### For Freelancers:
- **Client scheduling**: See exactly when your US clients' business hours translate to your local time
- **Project planning**: Plan deadlines and deliverables around timezone differences
- **Market expansion**: Identify new markets where timezone alignment supports better client relationships

---

**Perfect for remote work planning! 🏖️💻**

*Built with vanilla JavaScript, D3.js for mapping, and modern web standards. No frameworks required.*